

=======================
 INITIAL INSTALLATION
=======================

-> INSTALL WINDOWS 10 FIRST!!
-> boot into Arch USB/DVD using EUFI mode 

1) check internet (ping), if doesn't work then
    -> check interface
        -> ip addr
        -> ip link set <interface> up

    if ETHERNET Cable   -> ethernet shouldn't have any problem 
    else WIFI           -> wifi-menu <interface>
    
2) create partitions for ArchLinux
    -> DONT TOUCH ORIGINAL partitions created by WINDOWS!
    -> you can use 'cgdisk' (GPT) for this task 

3) mount important partitions
    -> check which EFI & root partition by either
        -> fdisk -l 
        -> lsblk
    -> mkdir /mnt /mnt/boot
    -> mount /dev/sdaX /mnt              (X = partition for install Arch)
    -> mount /dev/sdaY /mnt/boot/efi     (Y = partition for EFI System Partition [ESP])

4) install base ARCH data 
    -> MAKE SURE INTERNET IS NOW WORKING!
    -> pacstrap -i /mnt base base-devel grub-efi-x86_64

5) generate File System Table file 
    -> genfstab -pU /mnt >> /mnt/etc/fstab

6) CHROOT into the new system 
    -> arch-chroot /mnt /bin/bash

7) choose time region
    -> ln -sf /usr/share/zoneinfo/Asia/Kuala_Lumpur /etc/localtime
    -> hwclock --systohc

8) settings up the locale 
    -> edit /etc/locale.gen
        -> vi /etc/locale.gen
        -> uncomment the right locale & save 
    -> echo 'LANG=en_US.UTF-8' >> /etc/locale.conf
    -> echo 'LC_COLLATE="C"' >> /etc/locale.conf
    -> export LANG=en_US.UTF-8
    -> locale-gen

11) set root password
    -> passwd 

9) set computer hostname 
    -> echo archuser > /etc/hostname

10) install network thingy
    -> pacman -S iw wpa_supplicant wpa_actiond dialog
    -> pacman -S networkmanager rp-pppoe
    -> systemctl enable NetworkManager

2) install git & tk & vim
    -> pacman -S git tk vim

3) install bash-completion
    -> pacman -S bash-completion

4) create non-root user
    -> CREATE USER
      -> useradd -m -G wheel -s /bin/bash shahril
      -> passwd shahril
    -> ENABLE USERS INSIDE WHEEL GROUP TO USE SUDO
      -> visudo
      -> enable '%wheel ALL=(ALL) ALL'

6) install pacaur
    -> PACAUR DEPENDS ON COWER
      -> git clone https://aur.archlinux.org/cower.git
      -> cd cower
      -> makepkg -si --skippgpcheck
    -> INSTALL PACAUR
      -> git clone https://aur.archlinux.org/pacaur.git
      -> cd pacaur
      -> makepkg -si

8) enable multilib
    -> vi /etc/pacman.conf, remove # (comment) untuk multilib
        [multilib]
        Include = /etc/pacman.d/mirrorlist
    -> pacman -Syu

9) enable support for another File Systems
    -> pacman -S ntfs-3g exfat-utils btrfs-progs

7) install Xorg & Gnome
    -> pacaur -S xorg xorg-xinit xorg-server xorg-apps gdm
    -> pacaur -S gnome gnome-extra chrome-gnome-shell-git 
    -> systemctl enable gdm  (enable initial login menu & automatic X11 startup)
    -> EDIT /etc/gdm/custom.conf AND UNCOMMENT 'WaylandEnable=false'
        -> REASON: some games work poorly with WAYLAND (for now)
    -> ENABLE MAGIC SYSRQ (CAN RECOVER FROM CRASH, EQ: ALT+SYSRQ+F)
        -> echo "1" | sudo tee /etc/sysctl.d/99-sysctl.conf

12) install & configure GRUB with its related-files
    -> pacman -S grub os-prober dosfstools efibootmgr intel-ucode
    -> grub-install --recheck --debug (install GRUB EFI image)
    -> efibootmgr -v  (check EFI entries)
    -> grub-mkconfig -o /boot/grub/grub.cfg (automatically create GRUB's config + OS detection)

13) exit CHROOT & reboot 
    -> exit 
    -> reboot


===================
 POST INSTALLATION
===================

1) if no internet after initial Arch booting?
    -> IF LAN:
      -> ip addr  (check appropriate interface)
      -> systemctl enable dhcpcd@<interface>.service
      -> systemctl start dhcpcd@<interface>.service
    -> IF WIFI
      -> wifi-menu

11) install good-looking fonts
    -> pacaur -S ttf-dejavu noto-fonts adobe-source-han-sans-otc-fonts fontconfig 
    -> sudo ln -s /etc/fonts/conf.avail/10-sub-pixel-rgb.conf /etc/fonts/conf.d
    -> sudo ln -s /etc/fonts/conf.avail/11-lcdfilter-default.conf /etc/fonts/conf.d
    -> sudo wget https://gist.githubusercontent.com/cryzed/4f64bb79e80d619866ee0b18ba2d32fc/raw/bd073b52365393f9f0718425271825fc27b218f7/local.conf -O /etc/fonts/local.conf
    -> echo "export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true'" | sudo tee -a /etc/profile.d/jre.sh

12) install virtualbox
    -> pacman -S virtualbox virtualbox-guest-iso virtualbox-guest-utils
    -> ADD <USER> INTO 'vboxusers' TO ENABLE USB ACCESS
        -> gpasswd -a <user> vboxusers
    -> INSTALL EXTENSION PACK FOR USB 3.0, ETC
        -> pacaur -S virtualbox-ext-oracle

13) install numix (awesome theme)
    -> pacaur -S numix-circle-icon-theme-git numix-gtk-theme-git numix-icon-theme-git numix-cursor-theme-git 
    -> OPEN TWEAK-TOOL AND CHOOSE NUMIX

14) install bumblebee + nvidia driver
    -> pacman -S bumblebee nvidia lib32-virtualgl lib32-nvidia-utils mesa xf86-video-intel primus nvidia-settings opencl-nvidia lib32-primus mesa-demos lib32-mesa-demos
    -> systemctl enable bumblebeed
    -> ADD USER TO BUMBLEBEE GROUP
      -> gpasswd -a <user> bumblebee
    -> reboot

15) install sound
    -> pacman -S pulseaudio pavucontrol lib32-libpulse lib32-alsa-plugins

16) install printer support (YOU SHOULD REALLY INSTALL THIS)
    -> sudo pacman -S cups cups-pdf simple-scan
    -> ADD CURRENT USER TO GROUP SYS & LP
        -> sudo gpasswd --add <username> lp
        -> sudo gpasswd --add <username> sys
    -> sudo systemctl enable org.cups.cupsd.service
    -> sudo systemctl start org.cups.cupsd.service
    -> sudo pacman -S foomatic-db foomatic-db-engine foomatic-db-gutenprint-ppds foomatic-db-nonfree foomatic-db-nonfree-ppds foomatic-db-ppds gutenprint libusb
    -> sudo systemctl restart org.cups.cupsd.service
    -> GOTO http://localhost:631 AND ADD PRINTER YOURSELF

17) install my .dotfiles!
    -> mkdir -p ~/git && cd ~/git 
    -> git clone https://github.com/shahril96/dotfiles.git
    -> cd dotfiles 
    -> ./install 

18) install goodies
    -> GNOME EXTENSIONS
	-> https://extensions.gnome.org/extension/1010/archlinux-updates-indicator/
	-> https://extensions.gnome.org/extension/760/minimize-all/
	-> https://extensions.gnome.org/extension/1064/system-monitor/
	-> https://extensions.gnome.org/extension/55/media-player-indicator/
	-> https://extensions.gnome.org/extension/1031/topicons/
    -> INSTALL VLC
        -> pacman -S vlc --asdeps
    -> INSTALL WINE
        -> pacman -S wine-staging --asdeps
    -> OTHER GOODIES
        -> pacaur -S gvim visual-studio-code google-chrome steam wps-office rsync pinta tmux rhash gparted youtube-dl aria2 neofetch lsof
